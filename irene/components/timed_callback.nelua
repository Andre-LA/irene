-- Timed Callback component

--[[
  Copyright (c) 2020-present Andr√© Luiz Alvares

  This Source Code Form is subject to the terms of the Mozilla Public
  License, v. 2.0. If a copy of the MPL was not distributed with this
  file, You can obtain one at https://mozilla.org/MPL/2.0/.

  SPDX-License-Identifier: MPL-2.0
]]

local component = require 'rotor.component'
local GenIdx = require 'rotor.gen_idx'

local TimedCallback <nickname 'TimedCallback'> = @record{
  active: boolean,
  last_call: uint32,
  call_interval: uint32,
  callback: function(*TimedCallback, GenIdx), -- (added later through meta-programming)
}

## component.value.impl_is_component(TimedCallback.value)

function TimedCallback:can_call(current_time: uint32)
  return current_time - self.last_call > self.call_interval
end

function TimedCallback:call(current_time: uint32, entity_id: GenIdx)
  self.last_call = current_time

  if self.callback then
    self:callback(entity_id)
  end
end

return TimedCallback
