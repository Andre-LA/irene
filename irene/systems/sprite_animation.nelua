require 'nene'
require 'irene.core'
require 'irene.makers'
require 'irene.components.sprite'
require 'irene.components.animation_player'

local Comps, Sys = @Irene.Comps, @Irene.Sys

local SpriteAnimation = @MakeSystem('SpriteAnimation', @record{
  sprite: Comps.Sprite,
  animation_player: Comps.AnimationPlayer
})

global Sys.SpriteAnimation = @SpriteAnimation

function SpriteAnimation:run(current_time: uinteger)
  ## if PROF then
    nprof:push(#[SpriteAnimation.value.nickname]#)
    defer nprof:pop() end
  ## end

  for _, components in self:iterate_components() do
    local sprite = components.sprite
    local anim_player = components.animation_player

    if anim_player.paused then
      continue
    end

    local diff_time = current_time - anim_player.last_change_time

    local is_last_frame = sprite.current_frame >= anim_player.current_animation.to
    local frame_is_done = diff_time * anim_player.speed > 1000 / anim_player.current_animation.fps

    local should_change_frame = (do
      if frame_is_done then
        if is_last_frame then
          in anim_player.looping
        else
          in true
        end
      end
      in false
    end)

    if should_change_frame then
      sprite.current_frame = is_last_frame and anim_player.current_animation.from or sprite.current_frame + 1
      anim_player.last_change_time = current_time
    end
  end
end

