require 'vector'
require 'rotor'

## local masks_count = 0

global Irene = @record{}
global Irene.Comps = @record{}
global Irene.Sys = @record{}

global Irene.masks: record{} = {}
global Irene.storages: record{} = {}

## Irene.add_mask_and_storage = hygienize(function(compname, T)
  -- [[ types [[
  local masks = @#[Irene.value.metafields.masks.type]#
  local storages = @#[Irene.value.metafields.storages.type]#
  local T = @#[T]#
  local storageT = @Storage(T)
  -- ]] types ]]

  -- [[ update types [[
  ## masks.value:add_field(compname, BitsetArray.value)
  ## storages.value:add_field(compname, storageT.value)
  -- ]] update types ]]

  -- [[ fill fields [[
  Irene.masks.#|compname|# = BitsetArray.one() << #[masks_count]#
  Irene.storages.#|compname|# = storageT.new()

  ## masks_count = masks_count + 1
  -- ]] fill fields ]]
## end)

## Irene.add_mask_and_storage('entity', Entity)
