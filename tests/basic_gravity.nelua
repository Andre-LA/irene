-- minimal example of a box falling --

--[[
  This Source Code Form is subject to the terms of the Mozilla Public
  License, v. 2.0. If a copy of the MPL was not distributed with this
  file, You can obtain one at https://mozilla.org/MPL/2.0/.
]]

-- nene
local Nene = require 'nene'
local Color = require 'nene.color'

-- rotor
local entity = require 'rotor.entity'
local storage = require 'rotor.storage'
local system = require 'rotor.system'

-- irene
local Position = require 'irene.components.position'
local Gravity = require 'irene.components.gravity'
local Velocity = require 'irene.components.velocity'
local RectPainter = require 'irene.components.rect_painter'

local GravitySystem = require 'irene.systems.gravity_system'
local VelocitySystem = require 'irene.systems.velocity_system'
local RectPainterSystem = require 'irene.systems.rect_painter_system'

-- Falling box entity

local FallingBox = @entity(@record{
  position: Position,

  gravity: Gravity,
  velocity: Velocity,

  rect_painter: RectPainter,
})

local FallingBox.storage: storage(FallingBox, 1)

-- systems
local gravity_system: system(GravitySystem.run)
local velocity_system: system(VelocitySystem.run)
local rect_painter_system: system(RectPainterSystem.run)

-- basic gravity --

local ok = FallingBox.storage:push({
  position = {
    local_pos = {32, 32},
  },

  velocity = {
    active = true,
    use_deltatime = true,
  },

  gravity = {
    active = true,
    acceleration = 10,
    direction = { 0, 1 },
  },

  rect_painter = {
    active = true,
    size = { 16, 16 },
    color = Color.Palette.yellow,
  },
})

local ok, nene <close> = Nene.init('Irene - Basic gravity', 800, 450)
assert(ok, 'error: nene initialization failed.')

repeat
  nene:poll_events()

  gravity_system:run(&FallingBox.storage)
  velocity_system:run(&FallingBox.storage)

  nene:render_clear(Color.Palette.bg)

  rect_painter_system:run(&FallingBox.storage)

  nene:render_present()
until nene.quit
