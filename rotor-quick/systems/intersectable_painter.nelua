require 'math'
require 'tico'
require 'rotor-quick.makers'
require 'rotor-quick.components.intersectable'
require 'rotor-quick.components.painter'

local Intersectable = RotorQuick.Components.Intersectable
local Painter = RotorQuick.Components.Painter

global RotorQuick.Systems.IntersectablePainter = @MakeSystem('IntersectablePainter', @record{
  intersectable: Intersectable,
  painter: Painter
})

local IntersectablePainter = RotorQuick.Systems.IntersectablePainter

function IntersectablePainter:run()
  ## if PROF then
    nprof:push(#[IntersectablePainter.value.nickname]#)
    defer nprof:pop() end
  ## end

  for _, components in self:iterate_components() do
    local intersectable: *Intersectable = components.intersectable
    local painter: *Painter = components.painter

    if not painter.active then
      return
    end

    tico.graphics_draw_rectangle(
      intersectable.global_rect.x,
      intersectable.global_rect.y,
      math.ifloor(intersectable.global_rect.w),
      math.ifloor(intersectable.global_rect.h),
      painter.color
    )
  end
end

