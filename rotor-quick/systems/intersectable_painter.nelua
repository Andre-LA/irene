require 'math'
require 'nene'
require 'rotor-quick.core'
require 'rotor-quick.makers'
require 'rotor-quick.components.intersectable'
require 'rotor-quick.components.painter'

local RQ_Comps = RotorQuick.Components

global RotorQuick.Systems.IntersectablePainter = @MakeSystem('IntersectablePainter', @record{
  intersectable: RQ_Comps.Intersectable
})

local IntersectablePainter = RotorQuick.Systems.IntersectablePainter

function IntersectablePainter:run(core_state: *Nene.CoreState)
  ## if PROF then
    nprof:push(#[IntersectablePainter.value.nickname]#)
    defer nprof:pop() end
  ## end

  for _, components in self:iterate_components() do
    local intersectable = components.intersectable

    core_state:render_draw_rect(
      intersectable.global_rect:to_rect(),
      true,
      Nene.Palette.white
    )
  end
end

