require 'rotor-quick.makers'

require 'rotor-quick.components.follower'
require 'rotor-quick.components.target'
require 'rotor-quick.components.position'
require 'rotor-quick.components.velocity'

local Follower = RotorQuick.Components.Follower
local Target = RotorQuick.Components.Target
local Position = RotorQuick.Components.Position
local Velocity = RotorQuick.Components.Velocity

global RotorQuick.Systems.FollowerSystem = @MakeSystem('FollowerSystem', @record{
  follower: Follower,
  target: Target,
  position: Position,
  velocity: Velocity,
})

local FollowerSystem = RotorQuick.Systems.FollowerSystem

function FollowerSystem:run(deltatime: number)
  ## if PROF then
    nprof:push(#[FollowerSystem.value.nickname]#)
    defer nprof:pop() end
  ## end

  for _, components in self:iterate_components() do
    local follower, target, position, velocity = components.follower,
                                                 components.target,
                                                 components.position,
                                                 components.velocity

    local dir_to_follow = target:get_direction(position:get_global_position())
    local vel_to_follow = dir_to_follow * follower.speed
    velocity:add_velocity(vel_to_follow * deltatime)
  end
end
