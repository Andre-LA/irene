require 'rotor-quick.makers'
require 'rotor-quick.components.position'
require 'rotor-quick.components.follower'

local Position = RotorQuick.Components.Position
local Follower = RotorQuick.Components.Follower

global RotorQuick.Systems.FollowerSystem = @MakeSystem('FollowerSystem', @record{
  follower: Follower,
  position: Position,
})

local FollowerSystem = RotorQuick.Systems.FollowerSystem

function FollowerSystem:run()
  ## if PROF then
    nprof:push(#[FollowerSystem.value.nickname]#)
    defer nprof:pop() end
  ## end

  for _, components in self:iterate_components() do
    local follower = components.follower
    local position = components.position

    local followed_position_opt = follower:get_position()
    if followed_position_opt.filled then
      local followed_position = followed_position_opt:get()
      position:set_local_from_global(followed_position:get_global_position())
    end
  end
end
