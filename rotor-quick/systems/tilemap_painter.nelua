require 'nene'
require 'rotor-quick.core'
require 'rotor-quick.makers'
require 'rotor-quick.components.position'
require 'rotor-quick.components.painter'

local RQ_Comps = RotorQuick.Components

global RotorQuick.Systems.TilemapPainter = @MakeSystem('TilemapPainter', @record{
  position: RQ_Comps.Position,
  tilemap: RQ_Comps.Tilemap,
  painter: RQ_Comps.Painter,
})

local TilemapPainter = RotorQuick.Systems.TilemapPainter

function TilemapPainter:run(core_state: *Nene.CoreState)
  ## if PROF then
    nprof:push(#[TilemapPainter.value.nickname]#)
    defer nprof:pop() end
  ## end

  for _, components in self:iterate_components() do
    local position = components.position
    local tilemap = components.tilemap
    local painter = components.painter

    if not painter.active then
      continue
    end

    local drawpos = position:get_global_position()
    core_state:render_draw_tilemap(tilemap.tilemap, drawpos, painter.color)
  end
end
