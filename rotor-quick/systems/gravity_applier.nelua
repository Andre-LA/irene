require 'rotor-quick.makers'
require 'rotor-quick.components.position'
require 'rotor-quick.components.shape'
require 'rotor-quick.components.painter'

local Gravity = RotorQuick.Components.Gravity
local Velocity = RotorQuick.Components.Velocity

global RotorQuick.Systems.GravityApplier = @MakeSystem('GravityApplier', @record{
  gravity: Gravity,
  velocity: Velocity
})

local GravityApplier = RotorQuick.Systems.GravityApplier

function GravityApplier:run(dt: number)
  ## if PROF then
    nprof:push(#[GravityApplier.value.nickname]#)
    defer nprof:pop() end
  ## end

  for _, components in self:iterate_components() do
    local gravity: *Gravity = components.gravity
    local velocity: *Velocity = components.velocity

    if not gravity.active then
      continue
    end

    velocity:add_velocity(gravity.direction * gravity.acceleration * dt)
  end
end

