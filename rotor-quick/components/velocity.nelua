require 'math'
require 'vector'
require 'rotor-quick.makers'

global RotorQuick.Components.Velocity = @record{
  active: boolean,
  final_velocity: Vector2,
  max_velocity: uinteger,
  velocity_is_limited: boolean
}

local Velocity = RotorQuick.Components.Velocity
## is_component('velocity', Velocity)

function Velocity:add_velocity(velocity: Vector2)
  self.final_velocity = self.final_velocity + velocity
end

function Velocity:reset_velocity()
  self.final_velocity = { 0, 0 }
end

function Velocity.get_limited_velocity(velocity: Vector2, limit: number): Vector2
  local velocity_len = #velocity

  if velocity_len > limit then
    return velocity * (limit / velocity_len)
  else
    return velocity
  end
end
