require 'math'
require 'nene.math'
require 'rotor-quick.makers'

global RotorQuick.Components.Velocity = @record{
  active: boolean,
  final_velocity: Nene.Math.Vec2,
  max_velocity: uinteger,
  velocity_is_limited: boolean
}

local Velocity = RotorQuick.Components.Velocity
## is_component(Velocity)

function Velocity:add_velocity(velocity: Nene.Math.Vec2)
  self.final_velocity = self.final_velocity + velocity
end

function Velocity:reset_velocity()
  self.final_velocity = { 0, 0 }
end

function Velocity.get_limited_velocity(velocity: Nene.Math.Vec2, limit: number): Nene.Math.Vec2
  local velocity_len = #velocity

  if velocity_len > limit then
    return velocity * (limit / velocity_len)
  else
    return velocity
  end
end
