require 'rotor.optional'
require 'rotor-quick.makers'

global RotorQuick.Components.Position = @record{
  -- local position relative to parent's position, should be modified through set_local_position method
  local_position: Vector2,

  -- parent's position, should only be modified by a position hierarchy system
  origin_position: Vector2,

  -- flag for optimization (https://gameprogrammingpatterns.com/dirty-flag.html),
  -- is true when the local_position is modified on the current frame
  -- (this is why you should use set_local_position to change local_position);
  -- is reset to false by the position hierarchy system
  is_dirty: boolean,
}

local Position = RotorQuick.Components.Position
## is_component(Position)

function Position:get_global_position(): Vector2
  return self.origin_position + self.local_position
end

function Position:set_local_position(pos: Vector2)
  self.local_position = pos
  self.is_dirty = true
end

function Position:set_local_from_other_origin(origin_pos: Vector2)
  self:set_local_position(origin_pos - self.origin_position)
end
